name: Jekyll site CI with Trivy, CodeQL, and SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly scan on Mondays at 2 AM UTC

jobs:
  codeql:
    name: 🔍 CodeQL Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript  # adjust based on your project

    - name: 🏗️ No-op Build
      run: echo "No build step for static site"

    - name: 🔎 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  build:
    name: 🔧 Build Jekyll Site
    runs-on: ubuntu-latest
    needs: codeql

    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Build using jekyll/builder
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll \
        -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build --future"

  sonarqube:
    name: 🔎 SonarQube Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
       projectBaseDir: .
       args: >
         -Dsonar.projectKey=mydemo-app
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


  trivy:
    name: 🛡️ Trivy Scan
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
    - name: 🧪 Trivy image scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        image-ref: 'jekyll/builder:latest'
        format: 'table'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true

    - name: ❌ Fail if vulnerabilities found
      if: failure()
      run: exit 1
